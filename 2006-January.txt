From friedrij at berlios.de  Sat Jan 21 09:54:57 2006
From: friedrij at berlios.de (friedrij at BerliOS)
Date: Sat, 21 Jan 2006 09:54:57 +0100
Subject: [vidprofile-svn] r37 - in trunk: . src
Message-ID: <200601210854.k0L8sv5b015137@sheep.berlios.de>

Author: friedrij
Date: 2006-01-21 09:54:56 +0100 (Sat, 21 Jan 2006)
New Revision: 37

Modified:
   trunk/bootstrap
   trunk/configure.ac
   trunk/src/Makefile.am
Log:
smarter automaking - Static Pattern Rules for making an arbitrary number of shell scripts

Modified: trunk/bootstrap
===================================================================
--- trunk/bootstrap	2005-12-14 02:35:26 UTC (rev 36)
+++ trunk/bootstrap	2006-01-21 08:54:56 UTC (rev 37)
@@ -24,8 +24,8 @@
 # Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 
 rm -rvf "autom4te.cache"
-rm -rvf aclocal.m4 configure Makefile.in \
-        confdefs.h config.log config.status
+rm -rvf aclocal.m4 config.log config.status configure \
+        Makefile Makefile.in
 rm -rvf src/Makefile src/Makefile.in
 rm -rvf doc/Makefile doc/Makefile.in
 

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2005-12-14 02:35:26 UTC (rev 36)
+++ trunk/configure.ac	2006-01-21 08:54:56 UTC (rev 37)
@@ -88,6 +88,9 @@
 ])
 fi
 
+AC_CONFIG_FILES([Makefile src/Makefile doc/Makefile src/lib-vidprofile.sh])
+AC_OUTPUT
+
 # ******************************************************************************
 # ******************************************************************************
 #
@@ -108,7 +111,4 @@
 
   Optional dependencies
     pnmpsnr:            $HAVE_PNMPSNR
-])
-
-AC_CONFIG_FILES([Makefile src/Makefile doc/Makefile src/lib-vidprofile.sh])
-AC_OUTPUT
\ No newline at end of file
+])
\ No newline at end of file

Modified: trunk/src/Makefile.am
===================================================================
--- trunk/src/Makefile.am	2005-12-14 02:35:26 UTC (rev 36)
+++ trunk/src/Makefile.am	2006-01-21 08:54:56 UTC (rev 37)
@@ -17,40 +17,42 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 
-bin_SCRIPTS = \
-    lib-vidprofile \
-    profile \
-    psnrcore \
-    vidpsnr
+# List the source files for each shell script to be built and 
+# installed. Correct names are automatically created for the 
+# build process, as well as install directives.
 
-CLEANFILES = $(bin_SCRIPTS)
-
-EXTRA_DIST = \
-    lib-vidprofile.sh.in \
+sh_source = \
+    lib-vidprofile.sh \
     profile.sh \
     psnrcore.sh \
     vidpsnr.sh
 
-lib-vidprofile: $(srcdir)/lib-vidprofile.sh
-	rm -f "lib-vidprofile"
-	echo "#! `which env` sh"  > lib-vidprofile
-	cat $(srcdir)/lib-vidprofile.sh >> lib-vidprofile
-	chmod ugo+x lib-vidprofile
+################### LEAVE BELOW ALONE #########################
 
-profile: $(srcdir)/profile.sh
-	rm -f "profile"
-	echo "#! `which env` sh"  > profile
-	cat $(srcdir)/profile.sh >> profile
-	chmod ugo+x profile
+# No need to modify anything below! The above list can 
+# handle an arbitrary amount of shell scripts.
+# Everything is correctly built, installed, and cleaned so long
+# as the source files have a .sh suffix for shell scripts.
 
-psnrcore: $(srcdir)/psnrcore.sh
-	rm -f "psnrcore"
-	echo "#! `which env` sh"  > psnrcore
-	cat $(srcdir)/psnrcore.sh >> psnrcore
-	chmod ugo+x psnrcore
+# Strip the source file extentions. A built file will be called
+# by the basename of its source.
+#   eg: profile.sh becomes made and installed as profile
+sh_bin = $(basename $(sh_source))
 
-vidpsnr: $(srcdir)/vidpsnr.sh
-	rm -f "vidpsnr"
-	echo "#! `which env` sh"  > vidpsnr
-	cat $(srcdir)/vidpsnr.sh >> vidpsnr
-	chmod ugo+x vidpsnr
\ No newline at end of file
+# Specify the scripts to make and install.
+bin_SCRIPTS = $(sh_bin)
+
+# Clean the built scripts only. Leave the source files alone.
+CLEANFILES = $(bin_SCRIPTS)
+
+# Distribute the source files so the suite can be built!
+EXTRA_DIST = $(sh_source)
+
+# Make all the shell scripts.
+# These are Static Pattern Rules, found at:
+# http://www.gnu.org/software/make/manual/html_mono/make.html#SEC47
+$(sh_bin): %: %.sh
+	rm -f "$@"
+	echo "#! `which env` sh"  > $@
+	cat $(srcdir)/$< >> $@
+	chmod ugo+x $@



From friedrij at berlios.de  Sat Jan 21 11:41:28 2006
From: friedrij at berlios.de (friedrij at BerliOS)
Date: Sat, 21 Jan 2006 11:41:28 +0100
Subject: [vidprofile-svn] r38 - in trunk: . src
Message-ID: <200601211041.k0LAfSeD024836@sheep.berlios.de>

Author: friedrij
Date: 2006-01-21 11:41:28 +0100 (Sat, 21 Jan 2006)
New Revision: 38

Modified:
   trunk/ChangeLog
   trunk/configure.ac
   trunk/src/lib-vidprofile.sh.in
Log:
smarter and more general autoconfig

Modified: trunk/ChangeLog
===================================================================
--- trunk/ChangeLog	2006-01-21 08:54:56 UTC (rev 37)
+++ trunk/ChangeLog	2006-01-21 10:41:28 UTC (rev 38)
@@ -1,3 +1,13 @@
+2006-01-21 Joe Friedrichsen <friedrij at users.berlios.de>
+ * src/Makefile.am:
+     Use Static Pattern Rules to simplify and generalze
+          shell script building.
+
+  * configure.ac:
+     Cleaned up dependency finding: more generalized if additional
+          dependencies are added later. More helpful final summary
+          written.
+
 2005-12-06 Joe Friedrichsen <friedrij at users.berlios.de>
  vidprofile-0.80 released on berlios.de.
 

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-01-21 08:54:56 UTC (rev 37)
+++ trunk/configure.ac	2006-01-21 10:41:28 UTC (rev 38)
@@ -27,6 +27,10 @@
 # ******************************************************************************
 # ******************************************************************************
 
+# The first arugment sets the package name, the second sets the package version.
+# eg [vidprofile], [0.80] would yield a vidprofile-0.80.tar.gz after "$ make dist"
+#                         the version number is also substituted into 
+#                         lib-vidprofile.sh.in
 AC_INIT([vidprofile], [svn])
 AC_CONFIG_SRCDIR([src/profile.sh])
 
@@ -57,37 +61,108 @@
 # ******************************************************************************
 
 AC_MSG_NOTICE([Checking for required dependencies...])
-AC_PATH_PROG(GREP, [grep], [NOT FOUND])
-AC_PATH_PROG(MPLAYER, [mplayer], [NOT FOUND])
-AC_PATH_PROG(MPEG2ENC, [mpeg2enc], [NOT FOUND])
-AC_PATH_PROG(BC, [bc], [NOT FOUND])
+AC_CHECK_PROG(GREP, [grep], [ok], [NOT FOUND])
+AC_CHECK_PROG(MPLAYER, [mplayer], [ok], [NOT FOUND])
+AC_CHECK_PROG(MPEG2ENC, [mpeg2enc], [ok], [NOT FOUND])
+AC_CHECK_PROG(BC, [bc], [ok], [NOT FOUND])
 
-if test "$GREP" = "NOT FOUND" || \
-   test "$MPLAYER" =  "NOT FOUND" || \
-   test "$MPEG2ENC" =  "NOT FOUND" || \
-   test "$BC" = "NOT FOUND"; then
-        AC_MSG_ERROR([ Could not find these REQUIRED dependencies:
+# ------------------------------------------------------------------------------
+# Complain about missing required dependencies. If some are missing, list all
+# missing ones before failing and exiting.
 
-    grep:               $GREP
-    mplayer:            $MPLAYER
-    mpeg2enc:           $MPEG2ENC
-    bc:                 $BC
+# Sneaky make-do array. 
+REQ_DEP_LIST="grep=$GREP:mplayer=$MPLAYER:mpeg2enc=$MPEG2ENC:bc=$BC"
+
+# We can use gawk with confidence because the above
+# initiation macros look for it and will exit if gawk isn't found.
+FAIL=false
+i=1
+while test $i -le `echo "$REQ_DEP_LIST" | gawk -F ':' '{ print NF }'`; do
+   DEP=`echo $REQ_DEP_LIST | gawk -F ':' "{ print $"$i" }"`
+   NAME=`echo $DEP | gawk -F '=' '{ print $1 }'`
+   FOUND=`echo $DEP | gawk -F '=' '{ print $2 }'`
+   if test "x$FOUND" != "xok"; then
+     AC_MSG_WARN([Cannot find REQUIRED dependency: $NAME])
+     FAIL=:
+   fi
+   i=`expr $i + 1`
+done
+
+if $FAIL; then
+ AC_MSG_ERROR([
+
+ Could not find the above REQUIRED dependencies.
+ Please install the missing dependencies and ./configure again.
+ See vidprofile.berlios.de for links.
 ])
 fi
 
+
 # ******************************************************************************
 # Optional Dependencies 
 # ******************************************************************************
 
 AC_MSG_NOTICE([Checking for optional dependencies...])
-AC_CHECK_PROG(HAVE_PNMPSNR, [pnmpsnr], [pnmpsnr], [no-pnmpsnr])
 
-if test "$PNMPSNR" = "no-pnmpsnr"; then
-        AC_MSG_WARN([Could not find these OPTIONAL dependencies:
-    pnmpsnr:            $HAVE_PNMPSNR
-])
+# ------------------------------------------------------------------------------
+# Disabled messages given to user in the FINAL SUMMARY when a dependency cannot
+# be found.
+pnmpsnr_msg="(cannot measure PSNR)"
+
+# ------------------------------------------------------------------------------
+# Check for Peak Signal to Noise Ratio dependencies
+AC_CHECK_PROG(PNMPSNR, [pnmpsnr], [ok], [NOT FOUND])
+
+if test "x$PNMPSNR" = "xok"; then
+   HAVE_PSNR="pnmpsnr"
+else
+   HAVE_PSNR=""
+   AC_MSG_WARN([Cannot find pnmpsnr! You cannot measure PSNR.])
 fi
 
+# ------------------------------------------------------------------------------
+# Clear the disabled messages if the corresponding dependencies were found.
+
+# Sneaky make-do array. 
+OPT_DEP_LIST="pnmpsnr=$PNMPSNR"
+
+i=1
+while test $i -le `echo "$OPT_DEP_LIST" | gawk -F ':' '{ print NF }'`; do
+   DEP=`echo $OPT_DEP_LIST | gawk -F ':' "{ print $"$i" }"`
+   NAME=`echo $DEP | gawk -F '=' '{ print $1 }'`
+   FOUND=`echo $DEP | gawk -F '=' '{ print $2 }'`
+   if test "x$FOUND" = "xok"; then
+     unset ${NAME}_msg
+   fi
+   i=`expr $i + 1`
+done
+
+if test "x$HAVE_PSNR" = "xpnmpsnr"
+then
+   OPT_DEPENDENCIES="ALL FOUND"
+else
+   OPT_DEPENDENCIES="SOME MISSING"
+fi
+
+# ******************************************************************************
+# Build Options List, and make .in file substitutions
+# ******************************************************************************
+
+BUILD_OPTS=""
+for OPT in $HAVE_PSNR
+do
+  if test -z $OPT; then :
+  else
+     BUILD_OPTS=" $OPT$BUILD_OPTS"
+  fi
+done
+BUILD_OPTS="core$BUILD_OPTS"
+
+# AC_SUBST(VARIABLE, [VALUE]) 
+# Make VARIABLE .in file substitutable. @VARIABLE@ found inside .in files will 
+# be replaced with VALUE
+AC_SUBST(BUILD_OPTS)
+
 AC_CONFIG_FILES([Makefile src/Makefile doc/Makefile src/lib-vidprofile.sh])
 AC_OUTPUT
 
@@ -103,12 +178,8 @@
 
 FINAL SUMMARY
 
-  Required dependencies
-    grep:               $GREP
-    mplayer:            $MPLAYER
-    mpeg2enc:           $MPEG2ENC
-    bc:                 $BC
+  Required dependencies: ALL FOUND
 
-  Optional dependencies
-    pnmpsnr:            $HAVE_PNMPSNR
+  Optional dependencies: $OPT_DEPENDENCIES
+    pnmpsnr:       $PNMPSNR  $pnmpsnr_msg
 ])
\ No newline at end of file

Modified: trunk/src/lib-vidprofile.sh.in
===================================================================
--- trunk/src/lib-vidprofile.sh.in	2006-01-21 08:54:56 UTC (rev 37)
+++ trunk/src/lib-vidprofile.sh.in	2006-01-21 10:41:28 UTC (rev 38)
@@ -43,7 +43,7 @@
 # ******************************************************************************
  
 VIDPROFILE_VERSION="@VERSION@"
-BUILD_OPTS="core @HAVE_PNMPSNR@"
+BUILD_OPTS="@BUILD_OPTS@"
 
 VIDPROFILE_HOME="$HOME/.vidprofile"
 
@@ -89,7 +89,8 @@
 # ******************************************************************************
 check_optional_dependency()
 {
-  if echo "$BUILD_OPTS" | grep "no-$1" >> /dev/null 2>&1; then
+  if echo "$BUILD_OPTS" | grep "$1" >> /dev/null 2>&1; then :
+  else
      exit_with_error "Not suported! \"$2\" requires \"$1\". Install $1 and recompile."
   fi
 }



From friedrij at berlios.de  Sat Jan 21 14:07:10 2006
From: friedrij at berlios.de (friedrij at BerliOS)
Date: Sat, 21 Jan 2006 14:07:10 +0100
Subject: [vidprofile-svn] r39 - trunk
Message-ID: <200601211307.k0LD7AN8022351@sheep.berlios.de>

Author: friedrij
Date: 2006-01-21 14:07:05 +0100 (Sat, 21 Jan 2006)
New Revision: 39

Modified:
   trunk/configure.ac
Log:
autoconfig gives special messages for each dependency for those that are not found

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-01-21 10:41:28 UTC (rev 38)
+++ trunk/configure.ac	2006-01-21 13:07:05 UTC (rev 39)
@@ -61,39 +61,44 @@
 # ******************************************************************************
 
 AC_MSG_NOTICE([Checking for required dependencies...])
-AC_CHECK_PROG(GREP, [grep], [ok], [NOT FOUND])
-AC_CHECK_PROG(MPLAYER, [mplayer], [ok], [NOT FOUND])
-AC_CHECK_PROG(MPEG2ENC, [mpeg2enc], [ok], [NOT FOUND])
-AC_CHECK_PROG(BC, [bc], [ok], [NOT FOUND])
+AC_CHECK_PROG(GREP, [grep], [ok], [MISSING])
+AC_CHECK_PROG(MPLAYER, [mplayer], [ok], [MISSING])
+AC_CHECK_PROG(MPEG2ENC, [mpeg2enc], [ok], [MISSING])
+AC_CHECK_PROG(BC, [bc], [ok], [MISSING])
 
 # ------------------------------------------------------------------------------
 # Complain about missing required dependencies. If some are missing, list all
 # missing ones before failing and exiting.
 
+grep_msg="a GNU utility (http://www.gnu.org/software/grep)"
+mplayer_msg="part of mplayer (http://www.mplayerhq.hu)"
+mpeg2enc_msg="part of mjpegtools (http://mjpeg.sf.net}"
+bc_msg="a GNU utility (http://directory.fsf.org/GNU/bc.html)"
+
 # Sneaky make-do array. 
-REQ_DEP_LIST="grep=$GREP:mplayer=$MPLAYER:mpeg2enc=$MPEG2ENC:bc=$BC"
+REQ_DEP_LIST="grep=$GREP mplayer=$MPLAYER mpeg2enc=$MPEG2ENC bc=$BC"
 
 # We can use gawk with confidence because the above
 # initiation macros look for it and will exit if gawk isn't found.
 FAIL=false
-i=1
-while test $i -le `echo "$REQ_DEP_LIST" | gawk -F ':' '{ print NF }'`; do
-   DEP=`echo $REQ_DEP_LIST | gawk -F ':' "{ print $"$i" }"`
+for DEP in $REQ_DEP_LIST; do
    NAME=`echo $DEP | gawk -F '=' '{ print $1 }'`
    FOUND=`echo $DEP | gawk -F '=' '{ print $2 }'`
-   if test "x$FOUND" != "xok"; then
-     AC_MSG_WARN([Cannot find REQUIRED dependency: $NAME])
+   if test "x$FOUND" = "xMISSING"; then
      FAIL=:
+     ERR_MSG=$`eval echo ${NAME}_msg`
+     ERR_MSG=`eval echo $ERR_MSG`
+     MISSING_DEPS=`echo "$MISSING_DEPS"; printf "    %-9s %s\n" "$NAME" "$ERR_MSG"`
    fi
-   i=`expr $i + 1`
 done
 
 if $FAIL; then
  AC_MSG_ERROR([
 
- Could not find the above REQUIRED dependencies.
- Please install the missing dependencies and ./configure again.
- See vidprofile.berlios.de for links.
+  Could not find these REQUIRED dependencies:
+$MISSING_DEPS
+ 
+  Please install the missing dependencies and ./configure again.
 ])
 fi
 
@@ -111,7 +116,7 @@
 
 # ------------------------------------------------------------------------------
 # Check for Peak Signal to Noise Ratio dependencies
-AC_CHECK_PROG(PNMPSNR, [pnmpsnr], [ok], [NOT FOUND])
+AC_CHECK_PROG(PNMPSNR, [pnmpsnr], [ok], [MISSING])
 
 if test "x$PNMPSNR" = "xok"; then
    HAVE_PSNR="pnmpsnr"
@@ -126,22 +131,23 @@
 # Sneaky make-do array. 
 OPT_DEP_LIST="pnmpsnr=$PNMPSNR"
 
-i=1
-while test $i -le `echo "$OPT_DEP_LIST" | gawk -F ':' '{ print NF }'`; do
-   DEP=`echo $OPT_DEP_LIST | gawk -F ':' "{ print $"$i" }"`
+for DEP in $OPT_DEP_LIST; do
    NAME=`echo $DEP | gawk -F '=' '{ print $1 }'`
    FOUND=`echo $DEP | gawk -F '=' '{ print $2 }'`
    if test "x$FOUND" = "xok"; then
      unset ${NAME}_msg
    fi
-   i=`expr $i + 1`
 done
 
 if test "x$HAVE_PSNR" = "xpnmpsnr"
 then
    OPT_DEPENDENCIES="ALL FOUND"
+   OPT_DEP_MSG="SUCCESS!!"
+   INSTALL_MSG="Type 'su -c \"make install\"' to compile and install vidprofile."
 else
    OPT_DEPENDENCIES="SOME MISSING"
+   OPT_DEP_MSG="PARTIAL PASS (the MISSING dependencies above are not supported)"
+   INSTALL_MSG="Type 'su -c \"make install\"' to compile and install vidprofile anyway."
 fi
 
 # ******************************************************************************
@@ -181,5 +187,8 @@
   Required dependencies: ALL FOUND
 
   Optional dependencies: $OPT_DEPENDENCIES
-    pnmpsnr:       $PNMPSNR  $pnmpsnr_msg
+    pnmpsnr:       $PNMPSNR $pnmpsnr_msg
+
+$OPT_DEP_MSG
+  $INSTALL_MSG
 ])
\ No newline at end of file



From friedrij at berlios.de  Sat Jan 21 16:35:22 2006
From: friedrij at berlios.de (friedrij at BerliOS)
Date: Sat, 21 Jan 2006 16:35:22 +0100
Subject: [vidprofile-svn] r40 - trunk
Message-ID: <200601211535.k0LFZMUD020963@sheep.berlios.de>

Author: friedrij
Date: 2006-01-21 16:35:21 +0100 (Sat, 21 Jan 2006)
New Revision: 40

Modified:
   trunk/configure.ac
Log:
a much more informative autoconfigure, and better commented

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2006-01-21 13:07:05 UTC (rev 39)
+++ trunk/configure.ac	2006-01-21 15:35:21 UTC (rev 40)
@@ -1,4 +1,6 @@
 # Process this file with autoconf to produce a configure script.
+# Autoconf documentation:
+#     http://www.gnu.org/software/autoconf/manual/index.html
 
 # Copyright (C) 2005 Joe Friedrichsen <friedrij at users.berlios.de>
 # 
@@ -49,16 +51,14 @@
 # ******************************************************************************
 # ******************************************************************************
 
-# AC_MSG_CHECKING(feature-description)
-# AC_MSG_RESULT(result-description)
-# AC_PATH_PROG(variable, prog-to-check-for, [value-if-not-found])
-# AC_CHECK_PROG(variable, prog-to-check-for, value-if-found, 
-#               [value-if-not-found], [path-to-search], [reject])
-# AC_MSG_WARN([problem-description])
-
 # ******************************************************************************
 # Required Dependencies 
 # ******************************************************************************
+# How to add a dependency called foo: 
+#  (1) append another line to the AC_CHECK_PROG block to check for foo:
+#         AC_CHECK_PROG(FOO, [foo], [ok], [MISSING])
+#  (2) add another msg called foo_msg to the *_msg block 
+#  (3) add another name/variable pair to REQ_DEP_LIST: foo=$FOO
 
 AC_MSG_NOTICE([Checking for required dependencies...])
 AC_CHECK_PROG(GREP, [grep], [ok], [MISSING])
@@ -68,7 +68,7 @@
 
 # ------------------------------------------------------------------------------
 # Complain about missing required dependencies. If some are missing, list all
-# missing ones before failing and exiting.
+# missing ones and their _msg before failing and exiting.
 
 grep_msg="a GNU utility (http://www.gnu.org/software/grep)"
 mplayer_msg="part of mplayer (http://www.mplayerhq.hu)"
@@ -106,18 +106,25 @@
 # ******************************************************************************
 # Optional Dependencies 
 # ******************************************************************************
+# To add a new depedency called bar:
+#  (1) append another line to the AC_CHECK_PROG block to check for bar:
+#         AC_CHECK_PROG(BAR, [bar], [ok], [MISSING])
+#  (2) add another msg called bar_msg to the *_msg block 
+#  (3) add another test to the catagory's build option:
+#         test "x$FOO" = "xok"
+#  (4) add another name/variable pair to OPT_DEP_LIST: bar=$BAR
 
 AC_MSG_NOTICE([Checking for optional dependencies...])
 
 # ------------------------------------------------------------------------------
+# Check for Peak Signal to Noise Ratio dependencies
+AC_CHECK_PROG(PNMPSNR, [pnmpsnr], [ok], [MISSING])
+
+# ------------------------------------------------------------------------------
 # Disabled messages given to user in the FINAL SUMMARY when a dependency cannot
 # be found.
 pnmpsnr_msg="(cannot measure PSNR)"
 
-# ------------------------------------------------------------------------------
-# Check for Peak Signal to Noise Ratio dependencies
-AC_CHECK_PROG(PNMPSNR, [pnmpsnr], [ok], [MISSING])
-
 if test "x$PNMPSNR" = "xok"; then
    HAVE_PSNR="pnmpsnr"
 else



